<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ctrlcv.im.serve.friendship.dao.mapper.ImFriendshipMapper">
    <resultMap id="BaseResultMap" type="cn.ctrlcv.im.serve.friendship.dao.ImFriendshipEntity">
        <!--@mbg.generated-->
        <!--@Table im_friendship-->
        <id column="app_id" jdbcType="INTEGER" property="appId"/>
        <id column="from_id" jdbcType="VARCHAR" property="fromId"/>
        <id column="to_id" jdbcType="VARCHAR" property="toId"/>
        <result column="remake" jdbcType="VARCHAR" property="remake"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="black" jdbcType="TINYINT" property="black"/>
        <result column="black_sequence" jdbcType="VARCHAR" property="blackSequence"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="friend_sequence" jdbcType="BIGINT" property="friendSequence"/>
        <result column="add_source" jdbcType="VARCHAR" property="addSource"/>
        <result column="extra" jdbcType="VARCHAR" property="extra"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        app_id,
        from_id,
        to_id,
        remake,
        `status`,
        black,
        black_sequence,
        create_time,
        friend_sequence,
        add_source,
        extra
    </sql>

    <select id="getSingleFriendship" resultType="cn.ctrlcv.im.serve.friendship.model.response.CheckFriendShipResp">
        select from_id, to_id, IF(status = 1, 1, 0) `status`
        from im_friendship where from_id = #{fromId}
                             and to_id in
        <foreach collection="toIds" index="index" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </select>

    <select id="getBothFriendship" resultType="cn.ctrlcv.im.serve.friendship.model.response.CheckFriendShipResp">
        select a.from_id,
               a.to_id,
               (
                   case
                       when a.`status` = 1 and b.`status` = 1 then 1
                       when a.`status` = 1 and b.`status` != 1 then 2
                       when a.`status` != 1 and b.`status` = 1 then 3
                       when a.`status` != 1 and b.`status` != 1 then 4
                       end
                   )
        from (select from_id, to_id, IF(status = 1, 1, 0) `status`
              from im_friendship where from_id = #{fromId}
                                   and to_id in <foreach collection="toIds" index="index" item="id" separator=","
                                                         close=")" open="(">
        #{id}
    </foreach>) as a
                  inner join
    (select from_id, to_id, IF(status = 1, 1, 0) `status`
     from im_friendship where to_id = #{fromId}
                          and from_id in <foreach collection="toIds" index="index" item="id" separator="," close=")"
                                                  open="(">
        #{id}
    </foreach>) as b on a.from_id = b.to_id AND a.to_id = b.from_id
    </select>
</mapper>